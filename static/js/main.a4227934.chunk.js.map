{"version":3,"sources":["services/transform/transform.worker.ts","components/Orgs.tsx","components/AppBar.tsx","components/Paper.tsx","components/PaperTitle.tsx","utils/validation.ts","utils/storage.ts","services/orgs/orgs.repository.ts","services/orgs/orgs.service.ts","core/nds-calc.ts","core/atol-xml-builder.ts","pages/Main.tsx","components/OrgAddEditDialog.tsx","components/OrgDeleteAlertDialog.tsx","services/transform/transform.service.ts","components/FileUploader.tsx","components/RegisterTransform.tsx","theme.ts","App.tsx","index.tsx"],"names":["addMethods","methods","module","exports","w","Worker","name","OrgTaskStatus","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","Paper","styled","MuiPaper","padding","theme","spacing","PaperTitle","children","color","gutterBottom","Orgs","onAddOrgPressed","orgs","selectedOrgId","onOrgSelected","onDeleteRequested","onUpdateRequested","onFullResetRequested","handleDeleteButtonClick","orgId","e","stopPropagation","Box","display","justifyContent","mr","Button","startIcon","onClick","TableContainer","mb","Table","TableHead","TableRow","TableCell","align","TableBody","map","orgDescriptor","hover","id","selected","cursor","alignItems","fontSize","org","inn","taskStatus","IDLE","Tooltip","title","IN_PROGRESS","DONE","ERROR","IconButton","textAlign","yup","mixed","required","string","email","message","this","matches","isDigits","test","value","Boolean","length","getN","index","parseInt","dgt11","dgt12","dgt10","EntitiesStorage","key","_key","json","localStorage","getItem","JSON","parse","data","stringify","setItem","OrgsRepository","_orgsStorage","storageKey","storeData","retreiveData","getOrgs","uuidv4","storeOrgs","NDSType","OrgsService","_orgsRepository","getOrgById","create","update","remove","SNOTypes","TransformActionsTypes","validationSchema","object","shape","checkEmail","isINN","sno","paymentAddress","OrgAddEditDialogBody","onSaveOrAdd","onClose","isEditingForm","undefined","orgsService","React","useMemo","useState","editingOrg","setEditingOrg","formik","useFormik","initialValues","OSN","onSubmit","values","enableReinitialize","useEffect","getById","dialogTitle","DialogTitle","handleSubmit","DialogContent","Grid","container","item","xs","TextField","fullWidth","label","onChange","handleChange","onBlur","handleBlur","error","touched","errors","helperText","autoComplete","FormControl","InputLabel","Select","labelId","MenuItem","ENVD","ESN","USN_INCOME","USN_INCOME_OUTCOME","PATENT","FormHelperText","type","DialogActions","OrgAddEditDialog","open","bodyProps","Dialog","OrgDeleteAlertDialog","orgName","onDelete","TransformService","_tasks","taskId","sourceFile","a","taskWorker","createTransformWorker","transformRegister","resultFile","stopTransformationTask","terminate","FileUploader","onFileChange","disabled","fileName","setFileName","fileInputRef","useRef","size","marginRight","current","click","hidden","ref","file","target","files","accept","RegisterTransform","loading","onTransformRequested","onResetRequested","onCancelTaskRequested","selectedOrgExists","setSourceFile","height","width","href","URL","createObjectURL","download","Divider","Alert","severity","AlertTitle","flexDirection","pt","pb","CircularProgress","transformReducer","state","action","RESET_ALL","SET_RESET","payload","SET_IN_PROGRESS","inProgress","SET_DONE","SET_ERROR","Main","transformService","useReducer","transformState","transformDispatch","getAll","setOrgs","Object","keys","setSelectedOrgId","orgIdForDelete","setOrgIdForDelete","orgDeleteDialogIsOpen","setOrgDeleteDialogIsOpen","orgCreateOrUpdateDialogIsOpen","setOrgCreateOrUpdateDialogIsOpen","orgIdForUpdate","setOrgIdForUpdate","orgRowsDescriptors","startTransformTask","startTransformationTask","updateOrgsList","createTheme","App","ThemeProvider","CssBaseline","Container","mt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4227934.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"transformRegister\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"871adbd6b318e7ce9cf2.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React from 'react';\nimport Paper from '../components/Paper';\nimport Box from '@mui/material/Box';\nimport PaperTitle from '../components/PaperTitle';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport TableContainer from '@mui/material/TableContainer';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Org } from '../services/orgs/orgs.interfaces';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nexport enum OrgTaskStatus {\n  IDLE, IN_PROGRESS, ERROR, DONE\n}\n\nexport interface OrgRowDescriptor {\n  org: Org,\n  id: string,\n  taskStatus: OrgTaskStatus\n}\n\ninterface Props {\n  onAddOrgPressed: () => void\n  orgs: OrgRowDescriptor[]\n  selectedOrgId: string\n  onOrgSelected: (id: string) => void\n  onDeleteRequested: (id: string) => void\n  onUpdateRequested: (id: string) => void\n  onFullResetRequested: () => void\n}\n\nconst Orgs: React.FC<Props> = ({\n  onAddOrgPressed,\n  orgs,\n  selectedOrgId,\n  onOrgSelected,\n  onDeleteRequested,\n  onUpdateRequested,\n  onFullResetRequested\n}) => {\n  const handleUpdateButtonClick = (orgId: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    onUpdateRequested(orgId);\n  }\n\n  const handleDeleteButtonClick = (orgId: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    onDeleteRequested(orgId);\n  }\n\n  return (\n    <Paper>\n      <PaperTitle>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Box component=\"span\" sx={{ mr: 2 }}>\n            Организации\n          </Box>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            color=\"success\"\n            onClick={() => onAddOrgPressed()}\n          >\n            Добавить\n          </Button>\n        </Box>\n      </PaperTitle>\n      <TableContainer sx={{ mb: 2 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>\n                Название\n              </TableCell>\n              <TableCell>\n                ИНН\n              </TableCell>\n              <TableCell align=\"center\">\n                Статус задачи\n              </TableCell>\n              <TableCell align=\"right\">Действия</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orgs.map((orgDescriptor) => (\n              <TableRow\n                key={orgDescriptor.id}\n                hover\n                onClick={() => { onOrgSelected(orgDescriptor.id) }}\n                selected={orgDescriptor.id === selectedOrgId}\n                sx={{\n                  '&:hover': {\n                    cursor: 'pointer'\n                  }\n                }}>\n                <TableCell padding=\"none\">\n                  {orgDescriptor.id === selectedOrgId\n                    && <Box sx={{\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      padding: '8px'\n                    }}>\n                      <DoubleArrowIcon color=\"primary\" fontSize=\"large\" />\n                    </Box>\n                  }\n                </TableCell>\n                <TableCell>\n                  {orgDescriptor.org.name}\n                </TableCell>\n                <TableCell>\n                  {orgDescriptor.org.inn}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {orgDescriptor.taskStatus === OrgTaskStatus.IDLE &&\n                    <Tooltip title=\"Задача не запущена\">\n                      <RadioButtonUncheckedIcon color=\"disabled\" />\n                    </Tooltip>\n                  }\n                  {orgDescriptor.taskStatus === OrgTaskStatus.IN_PROGRESS &&\n                    <Tooltip title=\"В процессе\">\n                      <HourglassTopIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n                  {orgDescriptor.taskStatus === OrgTaskStatus.DONE &&\n                    <Tooltip title=\"Задача завершена\">\n                      <CheckCircleIcon color=\"success\" />\n                    </Tooltip>\n                  }\n                  {orgDescriptor.taskStatus === OrgTaskStatus.ERROR &&\n                    <Tooltip title=\"Ошибка\">\n                      <CancelIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </TableCell>\n                <TableCell padding=\"none\" align=\"right\">\n                  <Tooltip title={`Редактировать организацию \"${orgDescriptor.org.name}\"`}>\n                    <IconButton onClick={handleUpdateButtonClick(orgDescriptor.id)}>\n                      <EditIcon />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title={`Удалить организацию \"${orgDescriptor.org.name}\"`}>\n                    <IconButton color=\"error\" onClick={handleDeleteButtonClick(orgDescriptor.id)}>\n                      <DeleteIcon color=\"error\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box textAlign=\"right\">\n      <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => onFullResetRequested()}\n          >\n            Сбросить все результаты\n          </Button>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Orgs;\n","import React from 'react';\nimport {default as MuiAppBar} from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nconst AppBar: React.FC = () => (\n  <MuiAppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Reg2Reg - преобразование реестров\n      </Typography>\n    </Toolbar>\n  </MuiAppBar>\n);\n\nexport default AppBar;\n","import { default as MuiPaper } from '@mui/material/Paper';\nimport { styled } from '@mui/material/styles';\n\nconst Paper = styled(MuiPaper)(({ theme }) => ({\n  padding: theme.spacing(2)\n}));\n\nexport default Paper;\n","import  React from 'react';\nimport Typography from '@mui/material/Typography';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst PaperTitle: React.FC<Props> = ({ children }) => {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {children}\n    </Typography>\n  );\n}\n\nexport default PaperTitle;\n","import * as yup from 'yup';\n\nyup.setLocale({\n  mixed: {\n    required: 'Обязательное поле'\n  },\n  string: {\n    email: 'Некорректный адрес электронной почты'\n  }\n});\n\nyup.addMethod<yup.StringSchema>(yup.string, 'isDigits', function (message: string) {\n  return this.matches(/^\\d+$/, message);\n});\n\nyup.addMethod<yup.StringSchema>(yup.string, 'isINN', function () {\n  return this.isDigits('ИНН должент состоять только из цифр')\n    .test('innLength', 'ИНН должен состоять из 10-ти или 12-ти цифр', (value) => (\n      Boolean(value) && (value!.length === 10 || value!.length === 12)\n    ))\n    .test('innCheckSum', 'Некорректный ИНН', (value) => {\n      const getN = (index: number): number => (parseInt(value![index]));\n      if (value && value.length === 12) {\n        const dgt11 = ((\n          7 * getN(0) + 2 * getN(1) + 4 * getN(2) +\n          10 * getN(3) + 3 * getN(4) + 5 * getN(5) +\n          9 * getN(6) + 4 * getN(7) + 6 * getN(8) +\n          8 * getN(9)) % 11) % 10;\n\n        const dgt12 = ((\n          3 * getN(0) + 7 * getN(1) + 2 * getN(2) +\n          4 * getN(3) + 10 * getN(4) + 3 * getN(5) +\n          5 * getN(6) + 9 * getN(7) + 4 * getN(8) +\n          6 * getN(9) + 8 * getN(10)) % 11) % 10;\n\n        return (getN(10) === dgt11 && getN(11) === dgt12);\n      }\n\n      if (value && value.length === 10) {\n        const dgt10 = ((\n          2 * getN(0) + 4 * getN(1) + 10 * getN(2) +\n          3 * getN(3) + 5 * getN(4) + 9 * getN(5) +\n          4 * getN(6) + 6 * getN(7) + 8 * getN(8)\n        ) % 11) % 10;\n        return (getN(9) === dgt10);\n      }\n\n      return true;\n    });\n});\n\nexport default yup;\n","export type DataContainer<T> = { [k: string]: T };\n\nexport class EntitiesStorage<T> {\n  private _key: string;\n\n  constructor(key: string) {\n    this._key = key;\n  }\n\n  retreiveData(): DataContainer<T> {\n    const json = localStorage.getItem(this._key);\n\n    if (json === null) {\n      return {};\n    }\n  \n    return JSON.parse(json);\n  }\n\n  storeData(data: DataContainer<T>) {\n    const json = JSON.stringify(data);\n\n    localStorage.setItem(this._key, json);\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { Org } from \"./orgs.interfaces\";\nimport { EntitiesStorage, DataContainer } from \"../../utils/storage\";\n\nexport type OrgsDataContainer = DataContainer<Org>;\n\nexport class OrgsRepository {\n  static storageKey = 'orgs';\n\n  private _orgsStorage = new EntitiesStorage<Org>(OrgsRepository.storageKey);\n\n  /**\n   * Сохранение списка организаций в local storage.\n   */\n   private storeOrgs(orgs: OrgsDataContainer) {\n    this._orgsStorage.storeData(orgs);\n  }\n\n  /**\n   * Получение списока организаций.\n   */\n  getOrgs(): OrgsDataContainer {\n    const orgs = this._orgsStorage.retreiveData();\n\n    return orgs\n  }\n\n\n  getOrgById(id: string): Org | undefined {\n    const orgs = this._orgsStorage.retreiveData();\n\n    return orgs[id];\n  }\n\n  /**\n   * Создание организации.\n   * @param org Организация.\n   */\n  create(org: Org) {\n    const orgs = this.getOrgs();\n\n    orgs[uuidv4()] = org;\n  \n    this.storeOrgs(orgs);\n  }\n  \n  /**\n   * Обновление организации.\n   * @param id ID организации.\n   * @param org Организация.\n   */\n  update(id: string, org: Org) {\n    const orgs = this.getOrgs();\n\n    orgs[id] = org;\n  \n    this.storeOrgs(orgs);\n  }\n  \n  /**\n   * Удаление организации из списка.\n   * @param id ID организации.\n   */\n  remove(id: string) {\n    const orgs = this.getOrgs();\n\n    delete orgs[id];\n  \n    this.storeOrgs(orgs);\n  }\n}\n","import { OrgsRepository } from \"./orgs.repository\"\nimport { Org } from \"./orgs.interfaces\";\n\n\nexport class OrgsService {\n  private _orgsRepository: OrgsRepository = new OrgsRepository();\n\n  /**\n   * Получение списка орагинизаций.\n   * @returns \n   */\n  getAll() {\n    return this._orgsRepository.getOrgs();\n  }\n\n  /**\n   * Получение органиации по идетификтору.\n   * @param id ID организации в списке.\n   */\n  getById(id: string) {\n    return this._orgsRepository.getOrgById(id);\n  }\n\n  /**\n   * Создание организации.\n   * @param org Организация.\n   */\n  create(org: Org) {\n    this._orgsRepository.create(org);\n  }\n\n  /**\n   * Обновление организации.\n   * @param id ID организации в списке.\n   * @param org Организация.\n   */\n  update(id: string, org: Org) {\n    this._orgsRepository.update(id, org)\n  }\n\n  /**\n   * Удаление организации из списка.\n   * @param id ID организации в списке.\n   */\n  remove(id: string) {\n    this._orgsRepository.remove(id);\n  }\n}","import { Decimal } from 'decimal.js';\n\nexport enum NDSType {\n  none = 'none',\n  vat120 = 'vat120'\n}\n\nexport class NDSCalc {\n  static calcFor(type: NDSType, amount: number) {\n    switch(type) {\n      case NDSType.vat120:\n        return this._calcVat120(amount);\n    }\n  }\n\n  private static _calcVat120(amount: number): Decimal {\n    return new Decimal(amount).mul(new Decimal(20).div(new Decimal(120)))\n  }\n}","import xml from 'xml2js';\nimport moment from 'moment';\nimport { ReportPaymentData } from './report-parser';\nimport { getStringSizeInBytes } from './utils';\nimport JSZip from 'jszip';\nimport { NDSCalc, NDSType } from './nds-calc';\n\n/**\n * Типы систем налогооблажения.\n */\nexport enum SNOTypes {\n  OSN = 'osn',\n  USN_INCOME = 'usn_income',\n  USN_INCOME_OUTCOME = 'usn_income_outcome',\n  ENVD = 'envd',\n  ESN = 'esn',\n  PATENT = 'patent',\n}\n\nexport class AtolXMLBuilder {\n  // Ограничение 2 MB, но для удобства расчета сделал 1.9.\n  private _MAX_XML_FILE_SIZE = 1.8 * 10 ** 6;\n\n  constructor(\n    private _companyEmail: string,\n    private _companyInn: string,\n    private _checkEmail: string,\n    private _companySno: SNOTypes,\n    private _companyPaymentAddress: string\n  ) { }\n  \n  /**\n   * Сборка ZIP архива с XML-фалами, содержащими платежи для фискализации. \n   * @param paymentsData платежи для фискализации. \n   * @returns zip-архив.\n   */\n  async build(paymentsData: ReportPaymentData[]): Promise<File> {\n    // Содержимое файлов будем складывать в массив.\n    let currentFileIndex = 0;\n    const filesContent: ReportPaymentData[][] = [];\n\n    // Начальный вес первого файла.\n    let currentFileSize = 0;\n\n    const xmlBuilder = new xml.Builder({\n      xmldec: {\n        version: \"1.0\",\n        encoding: \"UTF-8\",\n        standalone: undefined\n      }\n    });\n\n    for (let paymentData of paymentsData) {\n      // Получаем объект чека для сериализации.\n      const checkObject = this._buildCheck(paymentData);\n\n      // Сериализуем его в XML.\n      const checkXml = xmlBuilder.buildObject(checkObject);\n\n      // Считаем размер получившегося чека.\n      const checkXmlSize = getStringSizeInBytes(checkXml);\n\n      // Если мы добавим чек в текущий файл, будет ли файл больше this._MAX_XML_FILE_SIZE?\n      if (currentFileSize + checkXmlSize > this._MAX_XML_FILE_SIZE) {\n        // Если да, то добавляем чек в следующий пустой файл.\n        currentFileIndex++;\n        currentFileSize = checkXmlSize;\n        filesContent[currentFileIndex] = [paymentData]\n      } else {\n        // Если нет, то добавляем его в текущий.\n        currentFileSize += checkXmlSize;\n        if (filesContent[currentFileIndex] === undefined) {\n          filesContent[currentFileIndex] = [];\n        }\n        filesContent[currentFileIndex].push(paymentData);\n      }\n    }\n\n    const resultZip = new JSZip();\n\n    // Зипуем все файлы из массива XML-файлов. Формат N.xml, где N - номер файла.\n    for (let i = 0; i < filesContent.length; i++) {\n      resultZip.file(\n        `${i + 1}.xml`,\n        xmlBuilder.buildObject(\n          this._buildFileObject(filesContent[i])\n        )\n      )\n    }\n\n    // Генерируем и возвращаем конечный файл result.zip.\n    const resultBlob = await resultZip.generateAsync({ type: 'blob' });\n    return new File([resultBlob], 'result.zip');\n  }\n\n  /**\n   * Формирование содержимого целого файла.\n   * @param paymentsData платежи для фискализации.\n   * @returns объект с содержимым файла.\n   */\n  private _buildFileObject(paymentsData: ReportPaymentData[]): object {\n    const fileObject = {\n      main: paymentsData.map((paymentData) => (this._buildCheck(paymentData)))\n    };\n\n    return fileObject;\n  }\n\n  /**\n   * Формирование объекта позиции в чеке.\n   * @param serviceName название позиции (услуги)ю\n   * @param amount сумма.\n   * @param vatType тип НДС.\n   * @returns объект позиции в чеке.\n   */\n  private _buildPaymentItem(serviceName: string, amount: number, vatType: NDSType): object {\n    return {\n      name: serviceName,\n      price: amount.toFixed(2),\n      quantity: 1,\n      sum: amount.toFixed(2),\n      measurement_unit: \"мес.\",\n      payment_method: \"full_payment\",\n      payment_object: \"service\",\n      vat: {\n        type: vatType,\n        ...(vatType !== NDSType.none ? { sum: NDSCalc.calcFor(vatType, amount)!.toFixed(2) } : {})\n      }\n    }\n  }\n\n  /**\n   * Формирование объекта одного чека (платежа).\n   * @param paymentData данные платежа.\n   * @returns объект чека.\n   */\n  private _buildCheck(paymentData: ReportPaymentData): object {\n    return {\n      check: {\n        timestamp: `${moment(paymentData.date).format(\"DD.MM.YYYY\")} 14:00:00`,\n        external_id: paymentData.operationId,\n        is_bso: false,\n        receipt: {\n          operation: \"sell\",\n          client: {\n            // Тут уточнить\n            email: this._checkEmail\n          },\n          company: {\n            email: this._companyEmail,\n            inn: this._companyInn,\n            sno: this._companySno,\n            payment_address: this._companyPaymentAddress\n          },\n          items: {\n            item: [\n              ...(paymentData.servicesAmount\n                ? [this._buildPaymentItem(\"Оплата ЖКУ\", paymentData.servicesAmount, NDSType.vat120)]\n                : []),\n              ...(paymentData.peniAmount\n                ? [this._buildPaymentItem(\"Пени\", paymentData.peniAmount, NDSType.none)]\n                : [])\n            ]\n          },\n          payments: {\n            payment: {\n              type: 1,\n              sum: paymentData.fullAmount.toFixed(2)\n            }\n          },\n          vats: {\n            vat: {\n              type: paymentData.servicesAmount ? NDSType.vat120 : NDSType.none,\n              sum: paymentData.servicesAmount ? NDSCalc.calcFor(NDSType.vat120, paymentData.servicesAmount)!.toFixed(2) : \"0.00\"\n            }\n          },\n          total: paymentData.fullAmount.toFixed(2)\n        }\n      }\n    }\n  }\n}","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Grid from '@mui/material/Grid';\nimport Orgs, { OrgRowDescriptor, OrgTaskStatus } from '../components/Orgs';\nimport OrgAddEditDialog from '../components/OrgAddEditDialog';\nimport OrgDeleteAlertDialog from '../components/OrgDeleteAlertDialog';\nimport { OrgsService } from '../services/orgs/orgs.service';\nimport { TransformService } from '../services/transform/transform.service';\nimport RegisterTransform from '../components/RegisterTransform';\n\n\ninterface TransformCurrentState {\n  inProgress: boolean\n  taskId: string\n  resultFile?: File\n  error?: string\n}\n\nenum TransformActionsTypes {\n  SET_RESET, RESET_ALL, SET_IN_PROGRESS, SET_DONE, SET_ERROR\n}\n\ninterface TransformAction {\n  type: TransformActionsTypes,\n  payload?: {\n    orgId: string\n    resultFile?: File\n    error?: string\n    taskId?: string\n  }\n}\n\ntype TransformState = { [k: string]: TransformCurrentState };\n\nconst transformReducer = (state: TransformState, action: TransformAction) => {\n  switch (action.type) {\n    case TransformActionsTypes.RESET_ALL:\n      return {};\n    case TransformActionsTypes.SET_RESET:\n      const { [action.payload!.orgId!]: _, ...restTransformStates } = state;\n      return restTransformStates;\n    case TransformActionsTypes.SET_IN_PROGRESS:\n      return {\n        ...state, [action.payload!.orgId!]: {\n          inProgress: true,\n          taskId: action.payload!.taskId!\n        }\n      }\n    case TransformActionsTypes.SET_DONE:\n      return {\n        ...state,\n        [action.payload!.orgId!]:\n        {\n          inProgress: false,\n          resultFile: action.payload!.resultFile!,\n          taskId: state[action.payload!.orgId!].taskId\n        }\n      }\n    case TransformActionsTypes.SET_ERROR:\n      return {\n        ...state,\n        [action.payload!.orgId!]:\n        {\n          inProgress: false,\n          error: action.payload!.error!,\n          taskId: state[action.payload!.orgId!].taskId\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nconst Main: React.FC = () => {\n  const orgsService = React.useMemo(() => new OrgsService(), []);\n  const transformService = React.useMemo(() => new TransformService(), []);\n\n  const [transformState, transformDispatch] = React.useReducer(transformReducer, {});\n\n  const [orgs, setOrgs] = React.useState(orgsService.getAll());\n  const [selectedOrgId, setSelectedOrgId] = React.useState(Object.keys(orgs)[0]);\n\n  const [orgIdForDelete, setOrgIdForDelete] = React.useState<string>();\n  const [orgDeleteDialogIsOpen, setOrgDeleteDialogIsOpen] = React.useState(false);\n\n  const [orgCreateOrUpdateDialogIsOpen, setOrgCreateOrUpdateDialogIsOpen] = React.useState(false);\n\n  const [orgIdForUpdate, setOrgIdForUpdate] = React.useState<string>();\n\n  const orgRowsDescriptors = React.useMemo(() => (Object.keys(orgs).map((orgId) => ({\n    org: orgs[orgId],\n    id: orgId,\n    taskStatus: !transformState[orgId] ? OrgTaskStatus.IDLE :\n      transformState[orgId].inProgress ? OrgTaskStatus.IN_PROGRESS :\n        transformState[orgId].resultFile ? OrgTaskStatus.DONE : OrgTaskStatus.ERROR\n  } as OrgRowDescriptor))), [orgs, transformState])\n\n  const startTransformTask = async (sourceFile: File) => {\n    const orgId = selectedOrgId;\n    const taskId = uuidv4();\n\n    transformDispatch({\n      type: TransformActionsTypes.SET_IN_PROGRESS,\n      payload: {\n        taskId,\n        orgId\n      }\n    });\n\n    try {\n      const resultFile = await transformService.startTransformationTask(taskId, sourceFile, orgs[selectedOrgId]);\n\n      transformDispatch({\n        type: TransformActionsTypes.SET_DONE,\n        payload: {\n          resultFile,\n          orgId\n        }\n      });\n\n    } catch (e: any) {\n      transformDispatch({\n        type: TransformActionsTypes.SET_ERROR,\n        payload: {\n          error: e.message,\n          orgId\n        }\n      });\n\n    }\n  }\n\n  const handleTransformResultReset = () => {\n    transformDispatch({\n      type: TransformActionsTypes.SET_RESET,\n      payload: {\n        orgId: selectedOrgId\n      }\n    });\n  }\n\n  const updateOrgsList = () => {\n    const orgs = orgsService.getAll();\n    setOrgs(orgs);\n  }\n\n  const handleAddOrgsPressed = () => {\n    setOrgIdForUpdate(undefined);\n    setOrgCreateOrUpdateDialogIsOpen(true);\n  };\n\n  const handleOrgModalClose = () => {\n    setOrgCreateOrUpdateDialogIsOpen(false);\n  };\n\n  const handleOrgModelSaveOrAdd = () => {\n    setOrgCreateOrUpdateDialogIsOpen(false);\n    updateOrgsList();\n  }\n\n  const handleOrgSelection = (id: string) => {\n    setSelectedOrgId(id);\n  }\n\n  const handleOrgDeletionAlertClose = () => {\n    setOrgDeleteDialogIsOpen(false);\n  }\n  const handleOrgDeletionAlertDelete = () => {\n    updateOrgsList();\n    setOrgDeleteDialogIsOpen(false);\n  }\n\n  const handleDeleteRequest = (orgId: string) => {\n    setOrgIdForDelete(orgId);\n    setOrgDeleteDialogIsOpen(true);\n  }\n\n  const handleUpdateRequest = (orgId: string) => {\n    setOrgIdForUpdate(orgId);\n    setOrgCreateOrUpdateDialogIsOpen(true);\n  }\n\n  const handleFullReset = () => {\n    transformDispatch({\n      type: TransformActionsTypes.RESET_ALL,\n    });\n  }\n\n  const handleCancelTask = () => {\n    transformService.stopTransformationTask(transformState[selectedOrgId].taskId);\n\n    transformDispatch({\n      type: TransformActionsTypes.SET_RESET,\n      payload: {\n        orgId: selectedOrgId\n      }\n    });\n  }\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Orgs\n            onAddOrgPressed={handleAddOrgsPressed}\n            orgs={orgRowsDescriptors}\n            selectedOrgId={selectedOrgId}\n            onOrgSelected={handleOrgSelection}\n            onDeleteRequested={handleDeleteRequest}\n            onUpdateRequested={handleUpdateRequest}\n            onFullResetRequested={handleFullReset}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <RegisterTransform\n            selectedOrgExists={selectedOrgId !== undefined}\n            key={selectedOrgId}\n            loading={transformState[selectedOrgId] ? transformState[selectedOrgId].inProgress : false}\n            resultFile={transformState[selectedOrgId]?.resultFile}\n            error={transformState[selectedOrgId]?.error}\n            onTransformRequested={startTransformTask}\n            onResetRequested={handleTransformResultReset}\n            onCancelTaskRequested={handleCancelTask}\n          />\n        </Grid>\n      </Grid>\n      <OrgAddEditDialog\n        orgId={orgIdForUpdate}\n        open={orgCreateOrUpdateDialogIsOpen}\n        onClose={handleOrgModalClose}\n        onSaveOrAdd={handleOrgModelSaveOrAdd}\n      />\n      <OrgDeleteAlertDialog\n        open={orgDeleteDialogIsOpen}\n        orgId={orgIdForDelete}\n        orgName={orgIdForDelete && orgs[orgIdForDelete] && orgs[orgIdForDelete].name}\n        onClose={handleOrgDeletionAlertClose}\n        onDelete={handleOrgDeletionAlertDelete}\n      />\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport yup from '../utils/validation';\nimport { useFormik } from \"formik\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { OrgsService } from '../services/orgs/orgs.service';\nimport { Org } from '../services/orgs/orgs.interfaces';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Grid from '@mui/material/Grid';\nimport { SNOTypes } from '../core/atol-xml-builder';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\n\ninterface OrgAddEditDialogBodyProps {\n  orgId?: string\n  onClose: () => void\n  onSaveOrAdd: () => void\n}\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required().email(),\n  checkEmail: yup.string().required().email(),\n  inn: yup.string().required().isINN(),\n  sno: yup.string().required(),\n  paymentAddress: yup.string().required()\n});\n\nconst OrgAddEditDialogBody: React.FC<OrgAddEditDialogBodyProps> = ({\n  orgId,\n  onSaveOrAdd,\n  onClose,\n}) => {\n  const isEditingForm = orgId !== undefined;\n\n  const orgsService = React.useMemo(() => new OrgsService(), []);\n  const [editingOrg, setEditingOrg] = React.useState<Org>();\n\n  const formik = useFormik({\n    initialValues: editingOrg || {\n      name: '',\n      email: '',\n      checkEmail: '',\n      inn: '',\n      sno: SNOTypes.OSN,\n      paymentAddress: ''\n    } as Org,\n    validationSchema,\n    onSubmit: (values) => {\n      if (isEditingForm) {\n        orgsService.update(orgId, values);\n      } else {\n        orgsService.create(values)\n      }\n      onSaveOrAdd();\n    },\n    enableReinitialize: true\n  })\n\n  React.useEffect(() => {\n    if (orgId) {\n      const org = orgsService.getById(orgId);\n      setEditingOrg(org);\n    }\n  }, [orgId, orgsService]);\n\n  const dialogTitle = !isEditingForm \n    ? 'Добавление организации' \n    : `Изменение организации \"${editingOrg && editingOrg.name}\"`;\n\n  return (\n    <>\n      <DialogTitle>\n        {dialogTitle}\n      </DialogTitle>\n      <form onSubmit={formik.handleSubmit}>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"org.name\"\n                name=\"name\"\n                label=\"Название\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.name && Boolean(formik.errors.name)}\n                helperText={(formik.touched.name && formik.errors.name) || ' '}\n                autoComplete=\"off\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel id=\"sno_type\">\n                  Система налогооблажения\n                </InputLabel>\n                <Select\n                  labelId=\"sno_type\"\n                  name=\"sno\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.sno}\n                  label=\"Система налогооблажения\"\n                >\n                  <MenuItem value={SNOTypes.OSN}>Основная</MenuItem>\n                  <MenuItem value={SNOTypes.ENVD}>Единый налог на вмененный доход</MenuItem>\n                  <MenuItem value={SNOTypes.ESN}>Единый сельскохозяйственный налог</MenuItem>\n                  <MenuItem value={SNOTypes.USN_INCOME}>Упрощенная (доходы)</MenuItem>\n                  <MenuItem value={SNOTypes.USN_INCOME_OUTCOME}>Упрощенная (доходы - расходы)</MenuItem>\n                  <MenuItem value={SNOTypes.PATENT}>Патент</MenuItem>\n                </Select>\n                <FormHelperText> </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"org.inn\"\n                name=\"inn\"\n                label=\"ИНН\"\n                value={formik.values.inn}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.inn && Boolean(formik.errors.inn)}\n                helperText={(formik.touched.inn && formik.errors.inn) || ' '}\n                autoComplete=\"off\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                type=\"email\"\n                fullWidth\n                variant=\"outlined\"\n                name=\"email\"\n                label=\"Электронная почта\"\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={(formik.touched.email && formik.errors.email) || ' '}\n                autoComplete=\"off\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                type=\"email\"\n                fullWidth\n                variant=\"outlined\"\n                name=\"checkEmail\"\n                label=\"Электронная почта для отправки чеков\"\n                value={formik.values.checkEmail}\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                error={formik.touched.checkEmail && Boolean(formik.errors.checkEmail)}\n                helperText={(formik.touched.checkEmail && formik.errors.checkEmail) || ' '}\n                autoComplete=\"off\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                name=\"paymentAddress\"\n                label=\"Платежный web-адрес\"\n                value={formik.values.paymentAddress}\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                error={formik.touched.paymentAddress && Boolean(formik.errors.paymentAddress)}\n                helperText={(formik.touched.paymentAddress && formik.errors.paymentAddress) || ' '}\n                autoComplete=\"off\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>\n            Отмена\n          </Button>\n          <Button\n            type=\"submit\"\n            color=\"success\"\n            startIcon={!isEditingForm ? <AddIcon /> : <SaveIcon />}\n          >\n            {!isEditingForm ? 'Добавить' : 'Сохранить'}\n          </Button>\n        </DialogActions>\n      </form>\n    </>\n  );\n};\n\ninterface OrgAddEditDialogProps extends OrgAddEditDialogBodyProps {\n  open: boolean\n};\n\nconst OrgAddEditDialog: React.FC<OrgAddEditDialogProps> = ({ open, onClose, ...bodyProps }) => (\n  <Dialog open={open} onClose={onClose}>\n    <OrgAddEditDialogBody onClose={onClose} {...bodyProps}/>\n  </Dialog>\n)\n\nexport default OrgAddEditDialog;\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogActions } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { OrgsService } from '../services/orgs/orgs.service';\n\ninterface Props {\n  open: boolean\n  orgName?: string\n  orgId?: string\n  onClose: () => void\n  onDelete: () => void\n}\n\nconst OrgDeleteAlertDialog: React.FC<Props> = ({\n  open,\n  orgName,\n  orgId,\n  onClose,\n  onDelete\n}) => {\n  const orgsService = React.useMemo(() => new OrgsService(), []);\n\n  const handleDelete = () => {\n    orgsService.remove(orgId!);\n    onDelete();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>\n        Вы уверены что хотите удалить организацию \"{orgName}\"?\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={onClose}>Отмена</Button>\n        <Button\n          startIcon={<DeleteIcon/>}\n          color=\"error\"\n          onClick={handleDelete}\n          >Удалить</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default OrgDeleteAlertDialog;\n","import { Org } from \"../orgs/orgs.interfaces\";\nimport * as TransformWorkerLocal from './transform.worker';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport createTransformWorker from 'workerize-loader!./transform.worker';\n\n\nexport class TransformService {\n  private _tasks: { [k: string]: ReturnType<typeof createTransformWorker> } = {};\n\n  async startTransformationTask(taskId: string, sourceFile: File, org: Org): Promise<File> {\n    const taskWorker = createTransformWorker<typeof TransformWorkerLocal>();\n    this._tasks[taskId] = taskWorker;\n\n    const resultFile = await taskWorker.transformRegister(sourceFile, org);\n\n    this.stopTransformationTask(taskId);\n\n    return resultFile;\n  }\n\n  stopTransformationTask(taskId: string) {\n    if (this._tasks[taskId] !== undefined) {\n      const taskWorker = this._tasks[taskId];\n      taskWorker.terminate();\n\n      delete this._tasks[taskId];\n    }\n  }\n}\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport IconButton from '@mui/material/IconButton';\nimport ClearIcon from '@mui/icons-material/Clear';\n\ninterface Props {\n  onFileChange: (file?: File | null) => void\n  disabled: boolean\n}\n\nconst FileUploader: React.FC<Props> = ({ onFileChange, disabled }) => {\n  const [fileName, setFileName] = React.useState<string>();\n  const fileInputRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\n\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files && e.target.files[0];\n    setFileName(file?.name);\n    onFileChange(file);\n  }\n\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  }\n\n  const handleFileInputClean = () => {\n    setFileName(undefined);\n    fileInputRef.current.value = '';\n    onFileChange(null);\n  }\n\n  return (\n    <Box sx={{\n      display: 'flex',\n      alignItems: 'center'\n    }}>\n      <TextField\n        disabled\n        fullWidth\n        variant=\"outlined\"\n        value={fileName || 'Файл не выбран'}\n        label=\"Файл исходного реестра\"\n        size=\"small\"\n        sx={(theme) => ({\n          flexGrow: 1,\n          marginRight: theme.spacing(1)\n        })}\n      />\n      {\n        fileName\n          ?\n          <IconButton\n            size=\"large\"\n            color=\"error\"\n            onClick={handleFileInputClean}\n            disabled={disabled}\n          >\n            <ClearIcon />\n          </IconButton>\n          :\n          <IconButton\n            onClick={handleUploadClick}\n            size=\"large\"\n            disabled={disabled}\n          >\n            <CloudUploadIcon />\n          </IconButton>\n      }\n      <input\n        type=\"file\"\n        hidden\n        ref={fileInputRef}\n        onChange={handleFileInputChange}\n        accept=\".xls,.xlsx\"\n      />\n    </Box>\n  )\n}\n\nexport default FileUploader;\n","import React from 'react';\nimport FileUploader from './FileUploader';\nimport Paper from './Paper';\nimport Box from '@mui/material/Box';\nimport PaperTitle from './PaperTitle';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport Button from '@mui/material/Button';\nimport CachedIcon from '@mui/icons-material/Cached';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport NotInterestedIcon from '@mui/icons-material/NotInterested';\n\ninterface Props {\n  loading: boolean\n  resultFile?: File\n  error?: string\n  onTransformRequested: (sourceFile: File) => void\n  onResetRequested: () => void\n  onCancelTaskRequested: () => void\n  selectedOrgExists: boolean\n}\n\nconst RegisterTransform: React.FC<Props> = ({\n  loading,\n  resultFile,\n  error,\n  onTransformRequested,\n  onResetRequested,\n  onCancelTaskRequested,\n  selectedOrgExists\n}) => {\n  const [sourceFile, setSourceFile] = React.useState<File | null>();\n\n  const handleSourceFileChange = (file?: File | null) => {\n    setSourceFile(file);\n  }\n\n  return (\n    <Paper>\n      <Box sx={{ mb: 2 }}>\n        <PaperTitle>\n          <Box sx={{\n            display: 'flex',\n            alignItems: 'center'\n          }}>\n            <ArticleIcon color=\"primary\" sx={{ mr: 2 }} />\n            Формирование реестра\n          </Box>\n        </PaperTitle>\n      </Box>\n      {!selectedOrgExists &&\n        <Box sx={{\n          display: 'flex',\n          height: '100px',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <NotInterestedIcon color=\"disabled\" sx={{height: '64px', width: '64px'}} />\n        </Box>\n      }\n      {selectedOrgExists && !loading && !resultFile && !error &&\n        <>\n          <Box sx={{ mb: 2 }}>\n            <FileUploader disabled={loading} onFileChange={handleSourceFileChange} />\n          </Box>\n\n          <Button\n            variant=\"contained\"\n            fullWidth\n            startIcon={<CachedIcon />}\n            size=\"large\"\n            disabled={!Boolean(sourceFile)}\n            onClick={() => onTransformRequested(sourceFile!)}\n          >\n            Начать преобразование\n          </Button>\n        </>\n      }\n      {(resultFile || error) &&\n        <>\n          {resultFile &&\n            <>\n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle1\">\n                  Файл результата: <strong>{resultFile!.name}</strong>\n                </Typography>\n              </Box>\n              <Box sx={{ mb: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  fullWidth\n                  startIcon={<DownloadIcon />}\n                  size=\"large\"\n                  href={URL.createObjectURL(resultFile!)}\n                  download={resultFile.name}\n                >\n                  Скачать\n                </Button>\n              </Box>\n              <Box sx={{ mb: 2 }}>\n                <Divider />\n              </Box>\n            </>\n          }\n          {error &&\n            <Box sx={{ mb: 2 }}>\n              <Alert severity=\"error\">\n                <AlertTitle>Ошибка!</AlertTitle>\n                {error}\n              </Alert>\n            </Box>\n          }\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            onClick={onResetRequested}\n          >\n            Сбросить результат\n          </Button>\n        </>\n      }\n      {loading &&\n        <Box sx={{\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}>\n          <Box sx={{\n            pt: 3,\n            pb: 4,\n          }}>\n            <CircularProgress size={60} />\n          </Box>\n          <Button variant=\"outlined\" color=\"error\" onClick={onCancelTaskRequested}>\n            Отменить\n          </Button>\n        </Box>\n      }\n    </Paper>\n  )\n}\n\nexport default RegisterTransform;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default theme;\n","import React from 'react';\nimport AppBar from './components/AppBar';\nimport Main from './pages/Main';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar />\n      <Container sx={{mb: 4, mt: 4}}>\n        <Main />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}